name: Docker Build and Publish

# Trigger on pushes to main or any branch
on:
  push:
    branches:
      # - main
      # - 'feature/*'
      # - 'release/*'

# Define environment variables for use in the workflow
env:
  REGISTRY: 586794487233.dkr.ecr.eu-west-2.amazonaws.com/hello-whale
  IMAGE_NAME: flask-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to AWS ECR
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build the Docker image
      - name: Build the Docker image
        run: |
          docker build -t $IMAGE_NAME:$GITHUB_SHA .
          docker tag $IMAGE_NAME:$GITHUB_SHA $REGISTRY/$IMAGE_NAME:$GITHUB_SHA

      # Step 5: Push the Docker image with the Git SHA tag
      - name: Push Docker image with commit SHA
        run: |
          docker push $REGISTRY/$IMAGE_NAME:$GITHUB_SHA

    #   # Step 6: Determine if we need to tag the image with `latest` or `branch` specific tags
    #   - name: Tag and Push Docker Image based on branch
    #     run: |
    #       if [ "${{ github.ref }}" == "refs/heads/main" ]; then
    #         docker tag $IMAGE_NAME:$GITHUB_SHA $REGISTRY/$IMAGE_NAME:latest
    #         docker push $REGISTRY/$IMAGE_NAME:latest
    #       elif [[ "${{ github.ref }}" == refs/heads/feature/* ]]; then
    #         BRANCH_TAG=${{ github.ref_name }} | sed 's/feature\///g'
    #         docker tag $IMAGE_NAME:$GITHUB_SHA $REGISTRY/$IMAGE_NAME:$BRANCH_TAG
    #         docker push $REGISTRY/$IMAGE_NAME:$BRANCH_TAG
    #       elif [[ "${{ github.ref }}" == refs/heads/release/* ]]; then
    #         BRANCH_TAG=${{ github.ref_name }} | sed 's/release\///g'
    #         docker tag $IMAGE_NAME:$GITHUB_SHA $REGISTRY/$IMAGE_NAME:$BRANCH_TAG
    #         docker push $REGISTRY/$IMAGE_NAME:$BRANCH_TAG
    #       fi
